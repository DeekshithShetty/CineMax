<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>