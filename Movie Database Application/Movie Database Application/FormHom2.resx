<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +f82aBUG5bNaxwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="PictureBox5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACEAAAAkCAYAAAAHKVPcAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAEiSURBVFhH7ZRB
        CsIwEEW9vK0uREXs1jN0bbcV3EjxArr2EpEpDCTh1SbSYJF8eHRhf+Zh0izMDOJIdN0jOZQsockSmq8k
        lsutKYpd/xTKcm+a5oLv+lCiJXTwENSxoURJrFZ7HOxDXYUSJUEDfWSbqKtQgiVk3+1zMERZJpagoQT1
        FUqwRFHwQB95j/oKJViCBg7x6VxQJpeQf+J6veMaAiVYoq7PQVuS9GAKY1+H/N62N+wqlCgJgYbbUMeG
        8n8SVXXCjg0lWmLs0qKODSVKQoaMfSEiSV2FEiRxPJ5wILFeH/onrSNQBiU2myroXvDxt8teU6A4EvKd
        y2VjLzIFumaQhF9OASVLaLKEJkto5ichl1VqKI7E8/lKDsWR+E2MeQPC6l4ht/paFQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>